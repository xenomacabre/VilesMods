<?xml version="1.0" encoding="UTF-8"?>

<Defs>
	
	<ThingDef ParentName="SK_BuildingBase">
		<defName>StakeWall</defName>
		<label>StakeWall</label>
		<graphicData>
			<texPath>Things/Building/Sudes/Sudes</texPath>
			<graphicClass>Graphic_Multi</graphicClass>
			<drawSize>(4,4)</drawSize>
			<shadowData>
				<volume>(0.3, 0.6, 0.3)</volume>
			</shadowData>
		</graphicData>
		<altitudeLayer>Building</altitudeLayer>
		<!--<pathCost>70</pathCost>-->
		<passability>Impassable</passability>
		<fillPercent>0.5</fillPercent>
		<!--<minifiedDef>MinifiedThing</minifiedDef>-->
		<!--<thingCategories>
			<li>BuildingsSecurity</li>
		</thingCategories>-->
		<resourcesFractionWhenDeconstructed>1.0</resourcesFractionWhenDeconstructed>
		<statBases>
			<MaxHitPoints>180</MaxHitPoints>
			<Beauty>-7</Beauty>
			<WorkToBuild>500</WorkToBuild>
			<Flammability>1</Flammability>
			<Mass>2</Mass>
		</statBases>
		<size>(2,1)</size>
		<building>
			<!--<uninstallWork>200</uninstallWork>-->
			<ai_chillDestination>false</ai_chillDestination>
			<isInert>true</isInert>
		</building>
		<description>Legionaries would build these from the sudes (stakes) that they would carry while marching. No sudes are lost from deconstructing. They're quite weak and not meant for be a permanent solution.</description>
		<costList>
			<Sudis>6</Sudis>
		</costList>
		<holdsRoof>false</holdsRoof>
		<blockLight>false</blockLight>
		<leaveResourcesWhenKilled>false</leaveResourcesWhenKilled>
		<constructEffect>ConstructWood</constructEffect>
		<designationCategory>Security</designationCategory>
		<repairEffect>ConstructWood</repairEffect>
		<rotatable>true</rotatable>
		<neverMultiSelect>false</neverMultiSelect>
		<researchPrerequisites>
			<li>Fortification_A1</li>
		</researchPrerequisites>
		<constructionSkillPrerequisite>3</constructionSkillPrerequisite>
	</ThingDef>
	
	<ThingDef ParentName="SK_BuildingBase">
		<defName>Valli</defName>
		<label>Hedgehog</label>
		<graphicData>
			<texPath>Things/Building/Valli/Valli</texPath>
			<graphicClass>Graphic_Single</graphicClass>
			<drawSize>(2,2)</drawSize>
			<shadowData>
				<volume>(0.3, 0.6, 0.3)</volume>
			</shadowData>
		</graphicData>
		<altitudeLayer>Building</altitudeLayer>
		<pathCost>200</pathCost>
		<passability>PassThroughOnly</passability>
		<fillPercent>0.25</fillPercent>
		<!--<minifiedDef>MinifiedThing</minifiedDef>-->
		<!--<thingCategories>
			<li>BuildingsSecurity</li>
		</thingCategories>-->
		<resourcesFractionWhenDeconstructed>1.0</resourcesFractionWhenDeconstructed>
		<statBases>
			<MaxHitPoints>300</MaxHitPoints>
			<Beauty>-7</Beauty>
			<WorkToBuild>300</WorkToBuild>
			<Flammability>1</Flammability>
			<Mass>2</Mass>
		</statBases>
		<size>(1,1)</size>
		<building>
			<!--<uninstallWork>200</uninstallWork>-->
			<ai_chillDestination>false</ai_chillDestination>
			<isInert>true</isInert>
		</building>
		<description>Legionaries would build these from the sudes (stakes) that they would carry while marching. No sudes are lost from deconstructing. Much sturdier than the stakewall, but enemies can very slowly pass through it.</description>
		<costList>
			<Sudis>3</Sudis>
		</costList>
		<holdsRoof>false</holdsRoof>
		<blockLight>false</blockLight>
		<leaveResourcesWhenKilled>false</leaveResourcesWhenKilled>
		<constructEffect>ConstructWood</constructEffect>
		<designationCategory>Security</designationCategory>
		<repairEffect>ConstructWood</repairEffect>
		<rotatable>false</rotatable>
		<neverMultiSelect>false</neverMultiSelect>
		<researchPrerequisites>
			<li>Fortification_A1</li>
		</researchPrerequisites>
		<constructionSkillPrerequisite>3</constructionSkillPrerequisite>
	</ThingDef>
	
	<ThingDef ParentName="SK_ResourceBase">
		<defName>Sudis</defName>
		<label>sudis</label>
		<description>A stake used to build temporary defenses.</description>
		<graphicData>
			<texPath>Things/Item/Sudis</texPath>
			<graphicClass>Graphic_StackCount</graphicClass>
			<!--<color>(170,200,160)</color>-->
		</graphicData>
		<soundInteract>Wood_Drop</soundInteract>
		<soundDrop>Wood_Drop</soundDrop>
		<stackLimit>60</stackLimit>
		<statBases>
			<MarketValue>10</MarketValue>
			<DeteriorationRate>0</DeteriorationRate>
			<Flammability>0</Flammability>
			<Mass>1</Mass>
		</statBases>
		<tickerType>Rare</tickerType>
		<thingCategories>
			<li>ResourcesRaw</li>
		</thingCategories>
		<!--<tradeTags>
			<li>TerraformingResources</li>
		</tradeTags>-->
	</ThingDef>
	
		
	
	<ThingDef ParentName="SK_BuildingBase">
		<defName>chevalDeFrise</defName>
		<label>cheval de frise</label>
		<graphicData>
			<texPath>Things/Building/ChevalDeFrise/ChevalDeFrise</texPath>
			<graphicClass>Graphic_Multi</graphicClass>
			<drawSize>(4,4)</drawSize>
			<shadowData>
				<volume>(0.3, 0.6, 0.3)</volume>
			</shadowData>
		</graphicData>
		<altitudeLayer>Building</altitudeLayer>
		<pathCost>200</pathCost>
		<passability>PassThroughOnly</passability>
		<fillPercent>0.25</fillPercent>
		<minifiedDef>MinifiedThing</minifiedDef>
		<thingCategories>
			<li>BuildingsSecurity</li>
		</thingCategories>
		<statBases>
			<MaxHitPoints>300</MaxHitPoints>
			<Beauty>-7</Beauty>
			<WorkToBuild>900</WorkToBuild>
			<Flammability>1</Flammability>
			<Mass>12</Mass>
		</statBases>
		<size>(2,1)</size>
		<building>
			<uninstallWork>200</uninstallWork>
			<ai_chillDestination>false</ai_chillDestination>
			<isInert>true</isInert>
		</building>
		<description>A defensive barrier made of sharpened stakes. It can be easiliy moved to work as a makeshift door, though enemies can very slowly pass over it.</description>
		<costList>
			<WoodLog>10</WoodLog>
			<Sudis>8</Sudis>
		</costList>
		<holdsRoof>false</holdsRoof>
		<blockLight>false</blockLight>
		<leaveResourcesWhenKilled>false</leaveResourcesWhenKilled>
		<constructEffect>ConstructWood</constructEffect>
		<designationCategory>Security</designationCategory>
		<repairEffect>ConstructWood</repairEffect>
		<rotatable>true</rotatable>
		<neverMultiSelect>true</neverMultiSelect>
		<researchPrerequisites>
			<li>Fortification_A1</li>
		</researchPrerequisites>
		<constructionSkillPrerequisite>3</constructionSkillPrerequisite>
	</ThingDef>
	
	

</Defs>